#!/bin/bash
set -euo pipefail

if [[ "${BUILDKITE_PLUGIN_ARTIFACTS_DEBUG:-false}" =~ (true|on|1) ]] ; then
  echo "~~~ :hammer: Enabling debug mode"
  set -x
fi

args=("upload")

if [[ -n "${BUILDKITE_PLUGIN_ARTIFACTS_JOB:-}" ]] ; then
  args+=("--job" "${BUILDKITE_PLUGIN_ARTIFACTS_JOB}")
fi

paths=()

RELOCATION="false"
SINGULAR_UPLOAD_OBJECT="false"
MULTIPLE_UPLOADS="false"

if [[ -n "${BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD:-}" ]] || { [[ -n "${BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_FROM:-}" ]] && [[ -n "${BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_TO:-}" ]]; }; then
    SINGULAR_UPLOAD_OBJECT="true"
    if [[ -n "${BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD:-}" ]] ; then
      paths+=("${BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD}")
    elif [[ -n "${BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_FROM:-}" ]] && [[ -n "${BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_TO:-}" ]] ; then
      RELOCATION="true"
      paths+=("${BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_FROM}")
    fi
fi

while IFS='=' read -r path _ ; do
  if [[ $path =~ ^(BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_[0-9]+) ]] && ! [[ $path =~ ^(BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_[0-9]+_TO) ]]; then
    MULTIPLE_UPLOADS="true"
    paths+=("${!path}")
  fi
done < <(env | sort)

workdir=${BUILDKITE_PLUGIN_ARTIFACTS_WORKDIR:-.}

pushd "${workdir}"
trap popd EXIT


# Set user-provided object ACL for AWS S3
if [[ -n "${BUILDKITE_PLUGIN_ARTIFACTS_S3_UPLOAD_ACL:-}" ]] ; then
  echo "~~~ Setting S3 object upload ACL: ${BUILDKITE_PLUGIN_ARTIFACTS_S3_UPLOAD_ACL}"
  export BUILDKITE_S3_ACL="${BUILDKITE_PLUGIN_ARTIFACTS_S3_UPLOAD_ACL}"
fi

# Set user-provided object ACL for Google Cloud Storage
if [[ -n "${BUILDKITE_PLUGIN_ARTIFACTS_GS_UPLOAD_ACL:-}" ]] ; then
  echo "~~~ Setting GS object upload ACL: ${BUILDKITE_PLUGIN_ARTIFACTS_GS_UPLOAD_ACL}"
  export BUILDKITE_GS_ACL="${BUILDKITE_PLUGIN_ARTIFACTS_GS_UPLOAD_ACL}"
fi

if [[ "${#args[@]}" -gt 1 ]]; then
  EXTRA_MESSAGE="(extra args: '${args[@]:1}')"
else
  EXTRA_MESSAGE=""
fi

if [[ "${SINGULAR_UPLOAD_OBJECT}" == "true" ]]; then
  if [[ "${RELOCATION}" == "true" ]]; then
    if [[ -e "${BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_FROM:-}" ]]; then
      echo "~~~ Moving [${BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_FROM}] to [${BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_TO}]..."
      mv "${BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_FROM}" "${BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_TO}"
    fi
    path="${BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_TO}"
  else
    path="${paths[0]}"
  fi

  echo "~~~ Uploading artifacts ${EXTRA_MESSAGE}"
  buildkite-agent artifact "${args[@]}" "${path}"

elif [[ "${MULTIPLE_UPLOADS}" == "true" ]]; then
  index=0
  echo "~~~ Uploading artifacts ${EXTRA_MESSAGE}"

  for path in "${paths[@]}"; do
    source_env_var="BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_${index}_FROM"
    dest_env_var="BUILDKITE_PLUGIN_ARTIFACTS_UPLOAD_${index}_TO"
    if [[ -n "${!source_env_var:-}" ]] && [[ -n "${!dest_env_var:-}" ]]; then
      if [[ -e ${!source_env_var} ]]; then
        echo "~~~ Moving [${!source_env_var}] to [${!dest_env_var}]..."
        mv ${!source_env_var} ${!dest_env_var}
      fi
      path="${!dest_env_var}"
    fi
    buildkite-agent artifact "${args[@]}" "$path"
    ((index+=1))
  done
fi
